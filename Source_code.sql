CREATE DATABASE maven_toy_analysis;
USE maven_toy_analysis;


#----------------------------------------
select * from inventory;
select * from products;
select * from sales;
select * from stores;

#---------------------------------------

#1. What is the total sales revenue generated by each store?
SELECT s.Store_ID, st.Store_Name, SUM(p.Product_Price * s.Units) AS Total_Revenue
FROM sales s
JOIN products p ON s.Product_ID = p.Product_ID
JOIN stores st ON s.Store_ID = st.Store_ID
GROUP BY s.Store_ID, st.Store_Name;

# 2. Which products are the top-selling in terms of units sold?
SELECT p.Product_Name, SUM(s.Units) AS Total_Units_Sold
FROM sales s
JOIN products p ON s.Product_ID = p.Product_ID
GROUP BY p.Product_Name
ORDER BY Total_Units_Sold DESC
LIMIT 5;  -- Adjust the limit as needed

#3. What is the sales performance by product category?
SELECT p.Product_Category, SUM(s.Units * p.Product_Price) AS Category_Sales
FROM sales s
JOIN products p ON s.Product_ID = p.Product_ID
GROUP BY p.Product_Category
ORDER BY Category_Sales DESC;

#4. What are the current inventory levels for each product at each store?
SELECT st.Store_Name, p.Product_Name, i.Stock_On_Hand
FROM inventory i
JOIN products p ON i.Product_ID = p.Product_ID
JOIN stores st ON i.Store_ID = st.Store_ID
ORDER BY st.Store_Name, p.Product_Name;

#5.How do monthly sales trends vary across different stores?
SELECT st.Store_Name, MONTH(s.Date) AS Sale_Month, SUM(s.Units) AS Total_Units_Sold
FROM sales s
JOIN stores st ON s.Store_ID = st.Store_ID
GROUP BY st.Store_Name, Sale_Month
ORDER BY st.Store_Name, Sale_Month;

#6.Which stores have the highest and lowest sales performance?
SELECT st.Store_Name, SUM(s.Units * p.Product_Price) AS Total_Revenue
FROM sales s
JOIN products p ON s.Product_ID = p.Product_ID
JOIN stores st ON s.Store_ID = st.Store_ID
GROUP BY st.Store_Name
ORDER BY Total_Revenue DESC;

#7. What is the profit margin for each product?
SELECT Product_Name, Product_Price, Product_Cost, 
(Product_Price - Product_Cost) AS Profit_Margin
FROM products
ORDER BY Profit_Margin DESC;

#8.How are sales distributed across different cities?
SELECT st.Store_City, SUM(s.Units * p.Product_Price) AS Total_Sales
FROM sales s
JOIN stores st ON s.Store_ID = st.Store_ID
JOIN products p ON s.Product_ID = p.Product_ID
GROUP BY st.Store_City
ORDER BY Total_Sales DESC;

#9.Which products are out of stock in each store?
SELECT st.Store_Name, p.Product_Name
FROM inventory i
JOIN products p ON i.Product_ID = p.Product_ID
JOIN stores st ON i.Store_ID = st.Store_ID
WHERE i.Stock_On_Hand = 0;

#10.How do sales vary by specific dates?
SELECT s.Date, SUM(s.Units * p.Product_Price) AS Total_Sales
FROM sales s
JOIN products p ON s.Product_ID = p.Product_ID
GROUP BY s.Date
ORDER BY s.Date;

#11.What is the average cost of products in each category?
SELECT Product_Category, AVG(Product_Cost) AS Avg_Product_Cost
FROM products
GROUP BY Product_Category;

#12.What is the sales growth over time for the entire company?
SELECT YEAR(s.Date) AS Sale_Year, MONTH(s.Date) AS Sale_Month, SUM(s.Units * p.Product_Price) AS Monthly_Sales
FROM sales s
JOIN products p ON s.Product_ID = p.Product_ID
GROUP BY Sale_Year, Sale_Month
ORDER BY Sale_Year, Sale_Month;

#13.How does the store open date affect sales performance?
SELECT st.Store_Name, st.Store_Open_Date, SUM(s.Units * p.Product_Price) AS Total_Sales
FROM stores st
JOIN sales s ON st.Store_ID = s.Store_ID
JOIN products p ON s.Product_ID = p.Product_ID
GROUP BY st.Store_Name, st.Store_Open_Date
ORDER BY st.Store_Open_Date;

#14.What percentage of total sales does each store contribute?
SELECT st.Store_Name, 
SUM(s.Units * p.Product_Price) / (SELECT SUM(s2.Units * p2.Product_Price) FROM sales s2 JOIN products p2 ON s2.Product_ID = p2.Product_ID) * 100 AS Sales_Percentage
FROM sales s
JOIN products p ON s.Product_ID = p.Product_ID
JOIN stores st ON s.Store_ID = st.Store_ID
GROUP BY st.Store_Name;

#15.How do sales compare to current stock levels for each product?
SELECT p.Product_Name, SUM(s.Units) AS Total_Units_Sold, i.Stock_On_Hand
FROM sales s
JOIN products p ON s.Product_ID = p.Product_ID
JOIN inventory i ON s.Product_ID = i.Product_ID
GROUP BY p.Product_Name, i.Stock_On_Hand
ORDER BY Total_Units_Sold DESC;



